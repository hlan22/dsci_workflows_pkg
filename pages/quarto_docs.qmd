---
title: "Quarto Reports"
format:
  html:
    code-copy: true
---

See here for more information:

- [Textbook: Reproducible Reports](https://ubc-dsci.github.io/reproducible-and-trustworthy-workflows-for-data-science/lectures/160-reproducible-reports.html)

- [My Assignment 4 Changes (where I received 110%)](https://github.com/hlan22/dsci-310-assignment-4)

<details>
<summary>How to make a dropdown menu</summary>
I figured I would start with this first, since I will be using it throughout the page. It won't be useful for a final exam, but it is useful for making a final exam website!

Here is what it looks like in raw markdown:

```html
<details>
<summary>How to make a dropdown menu</summary>
blah blah blah
</details>
```

And here is it so that it is easy to copy and paste to use:

```html
<details>
<summary> </summary>

</details>
```

Side note: you can only copy a code block easily when you specify the code type in the `'''` backticks section!

</details>

## Table and Image: Labelling and Referencing

* Info about figures: <https://quarto.org/docs/authoring/figures.html>

<details>
<summary>Execution Options for `.qmd` and `.Rmd` </summary>

| Execution Option | Description | Values |
|-------------------|------------------------|-----------------------------|
| `eval` | Evaluate the code chunk (if false, just echos the code into the output). | `true` <br> `false` |
| `echo` | Include the source code in output. | `true` <br> `false` <br> `fenced` |
| `output` | Include the results of executing the code in the output. | `true` <br> `false` <br> `asis` (raw markdown, without Quartoâ€™s standard enclosing markdown) |
| `warning` | Include warnings in the output. | `true` <br> `false` |
| `error` | Include errors in the output (note: errors won't stop document processing). | `true` <br> `false` |
| `include` | Prevent any output (code or results) from being included. | `true` <br> `false` |
</details>



<details>
<summary>Random introductory information </summary>

* Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

* Quarto sets up the metadata at the start with 3 dashes at the top of the file. If you move it after/later in the document, it will not understand.

* The notation at the start is yaml, keys and values, just like github actions files

* markdown is a short cut version of html, but you can always write pure html in a document too

If you want the proper coloring to show up for code, but not actually run it, you can do:

```r
myfunc <- function(blah) {
   blah + 1
}
```

But it doesn't define it!

```{r}
myfunc <- function(blah) {
   blah + 1
}

myfunc(3)
```

```{r}
#| echo: false
#| include: false
#| 
```

These execution options are yaml key/value combinations, that is why it is false instead of FALSE (not r code, it is yaml).

* The reason we say echo - whatever you tell me, i'll spit back to you

* what about word wrapping? it is still considered line 9

You can turn off soft wrap long lines, but I don't like that option.

If you think about it from a git perspective, you have to find the change in the giant 5-line sentence.
That is why you can split up sentences, but as long as there is no space inbetween the sentences, they are rendered as one.

* Semantic line breaks; strategically breaking lines so that it is easier for version control

* `ctrl` `shift` `p` is find a command

</details>
